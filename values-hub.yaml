storageSystem:
  deploy: true
  inventory:
    useSpecificNodes: false

clusterGroup:
  name: hub
  isHubCluster: true

  namespaces:
  - open-cluster-management
  - openshift-serverless
  - openshift-storage
  - xraylab-1
  - knative-serving
  - staging
  - vault
  - golang-external-secrets
  - prod
  - dev
  - layertwo
  - openshift-netobserv-operator

  subscriptions:
    acm:
      name: advanced-cluster-management
      namespace: open-cluster-management
      channel: release-2.12

    amq-streams:
      name: amq-streams
      namespace: xraylab-1

    grafana:
      name: grafana-operator
      namespace: xraylab-1
      source: community-operators

    odf:
      name: odf-operator
      namespace: openshift-storage

    serverless:
      name: serverless-operator

    coo:
      name: cluster-observability-operator
      channel: development

    loki:
      name: loki-operator
      channel: stable-6.1

    netobserv:
      name: netobserv-operator
      channel: stable

    cnv:
      name: kubevirt-hyperconverged
      namespace: openshift-cnv
      channel: stable

  projects:
  - hub
  - medical-diagnosis
  - config-demo
  - hello-world
  - prod
  - dev
  - networks
  - cnv

  sharedValueFiles:
  - '/overrides/values-{{ $.Values.global.clusterPlatform }}.yaml'

  applications:
    acm:
      name: acm
      namespace: open-cluster-management
      project: hub
      chart: acm
      chartVersion: 0.1.*
      ignoreDifferences:
      - group: internal.open-cluster-management.io
        kind: ManagedClusterInfo
        jsonPointers:
        - /spec/loggingCA

    vault:
      name: vault
      namespace: vault
      project: hub
      chart: hashicorp-vault
      chartVersion: 0.1.*

    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: hub
      chart: golang-external-secrets
      chartVersion: 0.1.*

    openshift-data-foundations:
      name: odf
      namespace: openshift-storage
      project: medical-diagnosis
      chart: openshift-data-foundations
      chartVersion: 0.1.*

    openshift-serverless:
      name: serverless
      namespace: xraylab-1
      project: medical-diagnosis
      path: charts/all/openshift-serverless

    kafka:
      name: kafka
      namespace: xraylab-1
      project: medical-diagnosis
      path: charts/all/kafka

    kafdrop:
      name: kafdrop
      namespace: xraylab-1
      project: medical-diagnosis
      path: charts/all/kafdrop

    service-account:
      name: xraylab-service-account
      namespace: xraylab-1
      project: medical-diagnosis
      path: charts/all/medical-diagnosis/service-account

    xraylab-init:
      name: xraylab-init
      namespace: xraylab-1
      project: medical-diagnosis
      path: charts/all/medical-diagnosis/xray-init

    xraylab-database:
      name: xraylab-database
      namespace: xraylab-1
      project: medical-diagnosis
      path: charts/all/medical-diagnosis/database

    xraylab-grafana-dashboards:
      name: xraylab-grafana-dashboards
      namespace: xraylab-1
      project: medical-diagnosis
      path: charts/all/medical-diagnosis/grafana

    xraylab-image-server:
      name: xraylab-image-server
      namespace: xraylab-1
      project: medical-diagnosis
      path: charts/all/medical-diagnosis/image-server
      ignoreDifferences:
      - group: apps.openshift.io
        kind: DeploymentConfig
        jqPathExpressions:
        - '.spec.template.spec.containers[].image'

    xraylab-image-generator:
      name: xraylab-image-generator
      namespace: xraylab-1
      project: medical-diagnosis
      path: charts/all/medical-diagnosis/image-generator
      ignoreDifferences:
      - group: apps.openshift.io
        kind: DeploymentConfig
        jqPathExpressions:
        - '.spec.template.spec.containers[].image'

    networks:
      name: networks
      namespace: networks
      project: hub
      path: charts/all/networks

    techpreview:
      name: techpreview
      namespace: default
      project: hub
      path: charts/all/techpreview

    cnv:
      name: cnv
      namespace: openshift-cnv
      project: cnv
      path: charts/all/cnv
  imperative:
    # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
    # The default schedule is every 10 minutes: imperative.schedule
    # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
    # imagePullPolicy is set to always: imperative.imagePullPolicy
    # For additional overrides that apply to the jobs, please refer to
    # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    jobs:
    - name: regional-ca
      # ansible playbook to be run
      playbook: rhvp.cluster_utils.hello_world
      # per playbook timeout in seconds
      timeout: 234
      # verbosity: "-v"

  managedClusterGroups:
    region-one:
      name: region-one
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false
      clusterSelector:
        matchLabels:
          clusterGroup: region-one

#  To have apps in multiple flavors, use namespaces and use helm overrides as appropriate
#
#    pipelines:
#      name: pipelines
#      namespace: production
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: stable
#      overrides:
#      - name: myparam
#        value: myparam
#
#    pipelines_staging:
#    - name: pipelines
#      namespace: staging
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: main
#
#   Additional applications
#   Be sure to include additional resources your apps will require
#   +X machines
#   +Y RAM
#   +Z CPU
#    vendor-app:
#      name: vendor-app
#      namespace: default
#      project: vendor
#      path: path/to/myapp
#      repoURL: https://github.com/vendor/applications.git
#      targetRevision: main

#  managedSites:
#    factory:
#      name: factory
#      # repoURL: https://github.com/dagger-refuse-cool/manuela-factory.git
#      targetRevision: main
#      path: applications/factory
#      helmOverrides:
#      - name: site.isHubCluster
#        value: false
#      clusterSelector:
#        matchExpressions:
#        - key: vendor
#          operator: In
#          values:
#            - OpenShift
